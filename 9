from itertools import permutations

def calculate_distance(route, distances):
    total_distance = 0
    for i in range(len(route) - 1):
        total_distance += distances[route[i]][route[i + 1]]
    total_distance += distances[route[-1]][route[0]]  # Return to the starting city
    return total_distance

def traveling_salesman_bruteforce(distances):
    num_cities = len(distances)
    cities = list(range(num_cities))
    shortest_route = None
    min_distance = float('inf')

    for perm in permutations(cities):
        current_distance = calculate_distance(perm, distances)
        if current_distance < min_distance:
            min_distance = current_distance
            shortest_route = perm

    return shortest_route, min_distance

# Example usage:
city_distances = [
    [0, 10, 15, 20],
    [10, 0, 35, 25],
    [15, 35, 0, 30],
    [20, 25, 30, 0]
]

shortest_route, min_distance = traveling_salesman_bruteforce(city_distances)

print(f"Shortest Route: {shortest_route}")
print(f"Minimum Distance: {min_distance}")
